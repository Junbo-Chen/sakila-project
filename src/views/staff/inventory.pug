extends ../layout

block content
  .d-flex.justify-content-between.align-items-center.mb-4
    h2.text-primary
      i.bi.bi-box-seam.me-2
      | Film Inventory Management
    .btn-group
      button.btn.btn-outline-primary(onclick="refreshInventory()")
        i.bi.bi-arrow-clockwise.me-2
        | Vernieuwen
      button.btn.btn-success(onclick="showAddFilmModal()")
        i.bi.bi-plus-circle.me-2
        | Film Toevoegen

  // Search and Filter Row
  .row.mb-4
    .col-md-4
      .input-group
        input.form-control(type="text" id="searchInput" placeholder="Zoek films...")
        button.btn.btn-outline-secondary(type="button" onclick="searchInventory()")
          i.bi.bi-search
    .col-md-3
      select.form-select(id="categoryFilter" onchange="filterByCategory()")
        option(value="") Alle Categorieën
        option(value="Action") Action
        option(value="Comedy") Comedy
        option(value="Drama") Drama
        option(value="Horror") Horror
        option(value="Sci-Fi") Sci-Fi
        option(value="Documentary") Documentary
    .col-md-3
      select.form-select(id="statusFilter" onchange="filterByStatus()")
        option(value="") Alle Status
        option(value="available") Beschikbaar
        option(value="low_stock") Lage Voorraad (≤2)
        option(value="out_of_stock") Uitverkocht
        option(value="all_rented") Alles Verhuurd
    .col-md-2
      button.btn.btn-outline-danger.w-100(onclick="resetFilters()")
        i.bi.bi-x-circle.me-1
        | Reset

  // Inventory Statistics Cards
  .row.g-4.mb-4
    .col-lg-3.col-md-6
      .card.bg-primary.text-white
        .card-body.text-center
          i.bi.bi-film.display-4.mb-2
          h3#totalFilms 0
          p.mb-0 Totaal Films
    .col-lg-3.col-md-6
      .card.bg-success.text-white
        .card-body.text-center
          i.bi.bi-check-circle.display-4.mb-2
          h3#availableFilms 0
          p.mb-0 Beschikbaar
    .col-lg-3.col-md-6
      .card.bg-warning.text-dark
        .card-body.text-center
          i.bi.bi-exclamation-triangle.display-4.mb-2
          h3#lowStockFilms 0
          p.mb-0 Lage Voorraad
    .col-lg-3.col-md-6
      .card.bg-danger.text-white
        .card-body.text-center
          i.bi.bi-x-circle.display-4.mb-2
          h3#outOfStockFilms 0
          p.mb-0 Uitverkocht

  // Inventory Table
  .card
    .card-header.bg-dark.text-white
      .row.align-items-center
        .col-md-8
          h5.mb-0
            i.bi.bi-table.me-2
            | Film Inventory Overzicht
    .card-body.p-0
      #inventoryTableContainer
        if inventory && inventory.length
          .table-responsive
            table.table.table-hover.mb-0#inventoryTable
              thead.table-light
                tr
                  th
                    input.form-check-input(type="checkbox" id="selectAll" onchange="toggleSelectAll()")
                  th.sortable(onclick="sortTable('film_id')") 
                    | ID 
                    i.bi.bi-arrow-up-down.ms-1
                  th.sortable(onclick="sortTable('title')") 
                    | Titel 
                    i.bi.bi-arrow-up-down.ms-1
                  th Categorie
                  th Jaar
                  th.sortable(onclick="sortTable('length')") 
                    | Duur 
                    i.bi.bi-arrow-up-down.ms-1
                  th Rating
                  th.sortable(onclick="sortTable('rental_rate')") 
                    | Tarief 
                    i.bi.bi-arrow-up-down.ms-1
                  th.text-center Totaal
                  th.text-center Verhuurd
                  th.text-center Beschikbaar
                  th.text-center Status
                  th.text-center Acties
              tbody
                each film in inventory
                  - var available = film.total_copies - (film.rented_out || 0)
                  - var statusClass = available === 0 ? 'table-danger' : (available <= 2 ? 'table-warning' : '')
                  tr(class=statusClass)
                    td
                      input.form-check-input(type="checkbox" name="filmSelect" value=film.film_id)
                    td #{film.film_id}
                    td
                      strong #{film.title}
                      if film.description
                        br
                        small.text-muted #{film.description.substring(0, 50)}...
                    td
                      span.badge.bg-secondary #{film.category || 'Onbekend'}
                    td #{film.release_year || 'N/A'}
                    td #{film.length || 0} min
                    td
                      span.badge.bg-info #{film.rating || 'NR'}
                    td.fw-bold €#{film.rental_rate}
                    td.text-center.fw-bold #{film.total_copies}
                    td.text-center
                      if film.rented_out > 0
                        span.badge.bg-warning #{film.rented_out}
                      else
                        span.text-muted 0
                    td.text-center.fw-bold(class=available === 0 ? 'text-danger' : (available <= 2 ? 'text-warning' : 'text-success'))
                      #{available}
                    td.text-center
                      if available === 0
                        span.badge.bg-danger Uitverkocht
                      else if available <= 2
                        span.badge.bg-warning Laag
                      else
                        span.badge.bg-success Beschikbaar
                    td.text-center
                      .btn-group.btn-group-sm
                        button.btn.btn-sm.btn-primary(onclick=`viewFilmDetails(${film.film_id})` title="Details")
                          i.bi.bi-eye
                        button.btn.btn-sm.btn-success(onclick=`addCopy(${film.film_id})` title="Kopie Toevoegen")
                          i.bi.bi-plus
                        if film.total_copies > film.rented_out
                          button.btn.btn-sm.btn-danger(onclick=`removeCopy(${film.film_id})` title="Kopie Verwijderen")
                            i.bi.bi-dash
        else
          .text-center.py-5
            i.bi.bi-box.display-1.text-muted
            h4.text-muted.mt-3 Geen films gevonden
            p.text-muted Geen films beschikbaar in de inventory

  // Bulk Actions Bar (Hidden by default)
  #bulkActionsBar.card.mt-3.d-none
    .card-body.bg-light
      .row.align-items-center
        .col-md-6
          span.text-muted
            i.bi.bi-check-square.me-2
            span#selectedCount 0
            |  films geselecteerd
        .col-md-6.text-end
          .btn-group
            button.btn.btn-sm.btn-success(onclick="bulkAddCopies()")
              i.bi.bi-plus-circle.me-1
              | Kopiëen Toevoegen
            button.btn.btn-sm.btn-warning(onclick="bulkUpdateRates()")
              i.bi.bi-currency-dollar.me-1
              | Tarieven Bijwerken
            button.btn.btn-sm.btn-danger(onclick="bulkAction('remove')")
              i.bi.bi-trash.me-1
              | Geselecteerde Verwijderen

  // Film Details Modal
  #filmDetailsModal.modal.fade(tabindex="-1")
    .modal-dialog.modal-lg
      .modal-content
        .modal-header
          h5.modal-title Film Details
          button.btn-close(type="button" data-bs-dismiss="modal")
        .modal-body
          #filmDetailsContent
            .text-center.py-4
              .spinner-border.text-primary
              p.mt-2 Details laden...
        .modal-footer
          button.btn.btn-secondary(data-bs-dismiss="modal") Sluiten
          button.btn.btn-primary(onclick="editFilm()")
            i.bi.bi-pencil.me-2
            | Bewerken

  // Add Film Modal
  #addFilmModal.modal.fade(tabindex="-1")
    .modal-dialog
      .modal-content
        .modal-header
          h5.modal-title Nieuwe Film Toevoegen
          button.btn-close(type="button" data-bs-dismiss="modal")
        form(id="addFilmForm")
          .modal-body
            .row
              .col-md-6
                .mb-3
                  label.form-label(for="filmTitle") Titel *
                  input.form-control(type="text" id="filmTitle" name="title" required)
              .col-md-6
                .mb-3
                  label.form-label(for="filmYear") Jaar
                  input.form-control(type="number" id="filmYear" name="release_year" min="1900" max="2025")
            .mb-3
              label.form-label(for="filmDescription") Beschrijving
              textarea.form-control(id="filmDescription" name="description" rows="3")
            .row
              .col-md-4
                .mb-3
                  label.form-label(for="filmLength") Duur (min)
                  input.form-control(type="number" id="filmLength" name="length" min="1")
              .col-md-4
                .mb-3
                  label.form-label(for="filmRating") Rating
                  select.form-select(id="filmRating" name="rating")
                    option(value="G") G
                    option(value="PG") PG
                    option(value="PG-13") PG-13
                    option(value="R") R
                    option(value="NC-17") NC-17
              .col-md-4
                .mb-3
                  label.form-label(for="filmRate") Verhuur Tarief (€)
                  input.form-control(type="number" id="filmRate" name="rental_rate" step="0.01" min="0")
            .row
              .col-md-6
                .mb-3
                  label.form-label(for="filmCategory") Categorie
                  select.form-select(id="filmCategory" name="category")
                    option(value="Action") Action
                    option(value="Comedy") Comedy
                    option(value="Drama") Drama
                    option(value="Horror") Horror
                    option(value="Sci-Fi") Sci-Fi
                    option(value="Documentary") Documentary
              .col-md-6
                .mb-3
                  label.form-label(for="filmCopies") Aantal Kopiëen
                  input.form-control(type="number" id="filmCopies" name="copies" value="1" min="1")
        .modal-footer
          button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Annuleren
          button.btn.btn-success(type="submit")
            i.bi.bi-check-circle.me-2
            | Film Toevoegen

  script.
    let inventoryData = !{JSON.stringify(inventory || [])};
    let currentSort = { field: null, direction: 'asc' };

    document.addEventListener('DOMContentLoaded', function() {
      updateStatistics();
      setupEventListeners();
    });

    function updateStatistics() {
      const totalFilms = inventoryData.length;
      let availableFilms = 0;
      let lowStockFilms = 0; 
      let outOfStockFilms = 0;

      inventoryData.forEach(film => {
        const available = film.total_copies - (film.rented_out || 0);
        if (available === 0) {
          outOfStockFilms++;
        } else if (available <= 2) {
          lowStockFilms++;
        } else {
          availableFilms++;
        }
      });

      document.getElementById('totalFilms').textContent = totalFilms;
      document.getElementById('availableFilms').textContent = availableFilms;
      document.getElementById('lowStockFilms').textContent = lowStockFilms;
      document.getElementById('outOfStockFilms').textContent = outOfStockFilms;
    }

    function setupEventListeners() {
      // Setup search input with debounce
      const searchInput = document.getElementById('searchInput');
      let searchTimeout;
      searchInput.addEventListener('input', function() {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
          searchInventory();
        }, 300);
      });

      // Setup form submission
      document.getElementById('addFilmForm').addEventListener('submit', function(e) {
        e.preventDefault();
        submitNewFilm();
      });
    }

    function searchInventory() {
      const query = document.getElementById('searchInput').value.toLowerCase();
      // Implementation would filter the table based on search query
      console.log('Searching for:', query);
    }

    function filterByCategory() {
      const category = document.getElementById('categoryFilter').value;
      console.log('Filtering by category:', category);
      // Implementation would filter the table
    }

    function filterByStatus() {
      const status = document.getElementById('statusFilter').value;
      console.log('Filtering by status:', status);
      // Implementation would filter the table
    }

    function resetFilters() {
      document.getElementById('searchInput').value = '';
      document.getElementById('categoryFilter').value = '';
      document.getElementById('statusFilter').value = '';
      // Reset table display
      location.reload();
    }

    function sortTable(field) {
      if (currentSort.field === field) {
        currentSort.direction = currentSort.direction === 'asc' ? 'desc' : 'asc';
      } else {
        currentSort.field = field;
        currentSort.direction = 'asc';
      }
      
      console.log(`Sorting by ${field} ${currentSort.direction}`);
      // Implementation would sort the table
    }

    function toggleSelectAll() {
      const selectAll = document.getElementById('selectAll');
      const checkboxes = document.querySelectorAll('input[name="filmSelect"]');
      
      checkboxes.forEach(checkbox => {
        checkbox.checked = selectAll.checked;
      });
      
      updateBulkActionsBar();
    }

    function updateBulkActionsBar() {
      const checkedBoxes = document.querySelectorAll('input[name="filmSelect"]:checked');
      const bulkBar = document.getElementById('bulkActionsBar');
      const countSpan = document.getElementById('selectedCount');
      
      if (checkedBoxes.length > 0) {
        bulkBar.classList.remove('d-none');
        countSpan.textContent = checkedBoxes.length;
      } else {
        bulkBar.classList.add('d-none');
      }
    }

    function viewFilmDetails(filmId) {
      const modal = new bootstrap.Modal(document.getElementById('filmDetailsModal'));
      modal.show();
      
      // Simulate loading film details
      setTimeout(() => {
        const film = inventoryData.find(f => f.film_id === filmId);
        if (film) {
          const available = film.total_copies - (film.rented_out || 0);
          document.getElementById('filmDetailsContent').innerHTML = `
            <div class="row">
              <div class="col-md-8">
                <h4 class="text-primary">${film.title}</h4>
                <p class="text-muted">${film.description || 'Geen beschrijving beschikbaar'}</p>
                <div class="row">
                  <div class="col-sm-6"><strong>Jaar:</strong> ${film.release_year || 'N/A'}</div>
                  <div class="col-sm-6"><strong>Duur:</strong> ${film.length || 0} minuten</div>
                  <div class="col-sm-6"><strong>Rating:</strong> ${film.rating || 'NR'}</div>
                  <div class="col-sm-6"><strong>Tarief:</strong> €${film.rental_rate}</div>
                </div>
              </div>
              <div class="col-md-4">
                <div class="card">
                  <div class="card-header bg-light">
                    <h6 class="mb-0">Voorraad Status</h6>
                  </div>
                  <div class="card-body">
                    <div class="row text-center">
                      <div class="col-12 mb-2">
                        <h3 class="text-primary">${film.total_copies}</h3>
                        <small class="text-muted">Totaal Kopiëen</small>
                      </div>
                      <div class="col-6">
                        <h4 class="text-warning">${film.rented_out || 0}</h4>
                        <small class="text-muted">Verhuurd</small>
                      </div>
                      <div class="col-6">
                        <h4 class="text-success">${available}</h4>
                        <small class="text-muted">Beschikbaar</small>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          `;
        }
      }, 500);
    }

    function addCopy(filmId) {
      Swal.fire({
        title: 'Kopie Toevoegen',
        text: 'Hoeveel kopiëen wil je toevoegen?',
        input: 'number',
        inputValue: 1,
        inputAttributes: {
          min: 1,
          max: 10
        },
        showCancelButton: true,
        confirmButtonText: 'Toevoegen',
        cancelButtonText: 'Annuleren'
      }).then((result) => {
        if (result.isConfirmed && result.value > 0) {
          // Simulate API call
          Swal.fire('Succes!', `${result.value} kopie(ën) toegevoegd`, 'success');
          // Here you would make an actual API call to add copies
        }
      });
    }

    function removeCopy(filmId) {
      const film = inventoryData.find(f => f.film_id === filmId);
      const available = film.total_copies - (film.rented_out || 0);
      
      if (available <= 1) {
        Swal.fire('Fout', 'Kan geen kopiëen verwijderen. Er moet minimaal 1 kopie beschikbaar blijven.', 'error');
        return;
      }

      Swal.fire({
        title: 'Kopie Verwijderen',
        text: `Hoeveel kopiëen wil je verwijderen? (Max: ${available - 1})`,
        input: 'number',
        inputValue: 1,
        inputAttributes: {
          min: 1,
          max: available - 1
        },
        showCancelButton: true,
        confirmButtonText: 'Verwijderen',
        cancelButtonText: 'Annuleren'
      }).then((result) => {
        if (result.isConfirmed && result.value > 0) {
          Swal.fire('Verwijderd!', `${result.value} kopie(ën) verwijderd`, 'success');
          // Here you would make an actual API call to remove copies
        }
      });
    }

    function showAddFilmModal() {
      new bootstrap.Modal(document.getElementById('addFilmModal')).show();
    }

    function submitNewFilm() {
      const formData = new FormData(document.getElementById('addFilmForm'));
      const filmData = Object.fromEntries(formData.entries());
      
      // Basic validation
      if (!filmData.title) {
        Swal.fire('Fout', 'Titel is verplicht', 'error');
        return;
      }

      // Simulate API call
      Swal.fire({
        title: 'Film Toevoegen...',
        allowOutsideClick: false,
        didOpen: () => {
          Swal.showLoading();
        }
      });

      setTimeout(() => {
        Swal.fire('Succes!', `Film "${filmData.title}" is toegevoegd aan de inventory`, 'success');
        bootstrap.Modal.getInstance(document.getElementById('addFilmModal')).hide();
        document.getElementById('addFilmForm').reset();
        // Here you would refresh the inventory data
      }, 1500);
    }

    function bulkAddCopies() {
      const selectedFilms = Array.from(document.querySelectorAll('input[name="filmSelect"]:checked'));
      
      if (selectedFilms.length === 0) {
        Swal.fire('Fout', 'Selecteer eerst films', 'error');
        return;
      }

      Swal.fire({
        title: 'Kopiëen Toevoegen',
        text: `Hoeveel kopiëen toevoegen aan ${selectedFilms.length} geselecteerde films?`,
        input: 'number',
        inputValue: 1,
        inputAttributes: {
          min: 1,
          max: 5
        },
        showCancelButton: true,
        confirmButtonText: 'Toevoegen',
        cancelButtonText: 'Annuleren'
      }).then((result) => {
        if (result.isConfirmed) {
          Swal.fire('Succes!', `${result.value} kopie(ën) toegevoegd aan ${selectedFilms.length} films`, 'success');
          // Clear selections
          document.getElementById('selectAll').checked = false;
          selectedFilms.forEach(cb => cb.checked = false);
          updateBulkActionsBar();
        }
      });
    }

    function bulkUpdateRates() {
      const selectedFilms = Array.from(document.querySelectorAll('input[name="filmSelect"]:checked'));
      
      if (selectedFilms.length === 0) {
        Swal.fire('Fout', 'Selecteer eerst films', 'error');
        return;
      }

      Swal.fire({
        title: 'Tarieven Bijwerken',
        html: `
          <p>Nieuw tarief voor ${selectedFilms.length} geselecteerde films:</p>
          <input id="newRate" class="swal2-input" type="number" step="0.01" min="0" placeholder="0.00">
        `,
        showCancelButton: true,
        confirmButtonText: 'Bijwerken',
        cancelButtonText: 'Annuleren',
        preConfirm: () => {
          const rate = document.getElementById('newRate').value;
          if (!rate || rate <= 0) {
            Swal.showValidationMessage('Voer een geldig tarief in');
            return false;
          }
          return rate;
        }
      }).then((result) => {
        if (result.isConfirmed) {
          Swal.fire('Bijgewerkt!', `Tarief €${result.value} toegepast op ${selectedFilms.length} films`, 'success');
          // Clear selections
          document.getElementById('selectAll').checked = false;
          selectedFilms.forEach(cb => cb.checked = false);
          updateBulkActionsBar();
        }
      });
    }

    function refreshInventory() {
      Swal.fire({
        title: 'Inventory Vernieuwen...',
        allowOutsideClick: false,
        didOpen: () => {
          Swal.showLoading();
        }
      });

      setTimeout(() => {
        Swal.fire('Vernieuwd!', 'Inventory data is bijgewerkt', 'success');
        location.reload();
      }, 1000);
    }


    function editFilm() {
      Swal.fire('Info', 'Film bewerking functionaliteit komt binnenkort beschikbaar', 'info');
    }

    // Event listeners for checkboxes to update bulk actions bar
    document.addEventListener('change', function(e) {
      if (e.target.name === 'filmSelect') {
        updateBulkActionsBar();
      }
    });