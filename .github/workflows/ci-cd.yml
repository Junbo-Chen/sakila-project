name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18.x'

jobs:
  # Test Job
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: sakila_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for MySQL
        run: |
          until mysqladmin ping -h"127.0.0.1" -P3306 -uroot -proot --silent; do
            echo 'Waiting for MySQL...'
            sleep 2
          done

      - name: Setup test database
        run: |
          # Download and setup Sakila sample database
          wget https://downloads.mysql.com/docs/sakila-db.zip
          unzip sakila-db.zip
          mysql -h127.0.0.1 -P3306 -uroot -proot sakila_test < sakila-db/sakila-schema.sql
          mysql -h127.0.0.1 -P3306 -uroot -proot sakila_test < sakila-db/sakila-data.sql
          
          # Add password field to customer table for testing
          mysql -h127.0.0.1 -P3306 -uroot -proot sakila_test -e "
            ALTER TABLE customer ADD COLUMN IF NOT EXISTS password VARCHAR(255);
            UPDATE customer SET password = '\$2a\$10\$example.hash.here' WHERE customer_id <= 5;
          "

      - name: Run unit tests (if any)
        run: npm test --if-present

      - name: Start application in background
        run: |
          npm start &
          sleep 10
        env:
          NODE_ENV: test
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: root
          DB_DATABASE: sakila_test
          DB_PORT: 3306

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 30
          spec: 'cypress/e2e/smoke.cy.js'
        env:
          CYPRESS_baseUrl: http://localhost:3000
          STAFF_EMAIL: 'mike.hillyer@sakilastaff.com'
          STAFF_PASSWORD: 'password123'
          CUSTOMER_EMAIL: 'mary.smith@sakilacustomer.com'
          CUSTOMER_PASSWORD: 'customer123'

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-videos
          path: |
            cypress/screenshots
            cypress/videos

  # Security Scan
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=high

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  # Code Quality Check
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint (if configured)
        run: npm run lint --if-present

      - name: Check code formatting (if Prettier configured)
        run: npm run format:check --if-present

