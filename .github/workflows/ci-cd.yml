name: run tests and build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write 

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Install wait-on for application readiness
        run: npm install wait-on --no-save

      - name: Run Cypress E2E tests
        run: npm run cy:run
        env:
          NODE_ENV: test
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_PORT: ${{ secrets.DB_PORT }}
          STAFF_EMAIL : ${{ secrets.STAFF_EMAIL }}
          STAFF_PASSWORD : ${{ secrets.STAFF_PASSWORD }}
          CUSTOMER_EMAIL : ${{ secrets.CUSTOMER_EMAIL }}
          CUSTOMER_PASSWORD : ${{ secrets.CUSTOMER_PASSWORD }}
          
      - name: Upload test screenshots (on failure)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          retention-days: 7

      - name: Upload test videos (on failure)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos
          retention-days: 7

  build:
    runs-on: ubuntu-latest
    needs: test # Only run build if tests pass
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
          
      - name: Build application (if build script exists)
        run: npm run build --if-present
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_PORT: ${{ secrets.DB_PORT }}
          STAFF_EMAIL : ${{ secrets.STAFF_EMAIL }}
          STAFF_PASSWORD : ${{ secrets.STAFF_PASSWORD }}
          CUSTOMER_EMAIL : ${{ secrets.CUSTOMER_EMAIL }}
          CUSTOMER_PASSWORD : ${{ secrets.CUSTOMER_PASSWORD }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .